# !!! *** Make Docker Compose: TOMCAT 9.0.0 + FILEBEAT *** !!!
# some details for run in container with config files:
# /etc/filebeat/filebeat.yml -> default directory for installed filebeat application !
docker run --rm -it --name filebeat -v /etc/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml docker.elastic.co/beats/filebeat:7.3.2

# some ideas -> use Dockerfile !!! for example:

FROM docker.elastic.co/logstash/logstash:7.3.2
RUN rm -f /usr/share/logstash/pipeline/logstash.conf
COPY pipeline/ /usr/share/logstash/pipeline/

# https://docs.docker.com/develop/develop-images/dockerfile_best-practices/

# filebeat !!!

docker run -d \
  --name=filebeat \
  --user=root \
  --volume="$(pwd)/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro" \
  --volume="/var/lib/docker/containers:/var/lib/docker/containers:ro" \
  --volume="/var/run/docker.sock:/var/run/docker.sock:ro" \
  docker.elastic.co/beats/filebeat:7.3.2 filebeat -e -strict.perms=false \
  -E output.elasticsearch.hosts=["192.168.0.38:9200"]

# 

docker run --name=filebeat \
docker.elastic.co/beats/filebeat:7.3.2 \
setup -E setup.kibana.host=kibana:5601 \
-E output.elasticsearch.hosts=["192.168.0.38:9200"]

#  

# fetch log-data from apache tomcat"
docker run --rm -it --link elastic_s:elasticsearch --name=logstash logstash:7.3.2 -e 'input{tcp{host=>"192.168.0.38:8888"}}}output{elasticsearch{hosts=>"192.168.0.38:9200"}}'

input {
  tcp {
    type => "apache"
    port => 3333
  }
}

#





# Here is an example command for an Apache HTTP Server container with labels to configure the Filebeat and Metricbeat modules for the Apache HTTP Server:
docker run \
  --label co.elastic.logs/module=apache2 \
  --label co.elastic.logs/fileset.stdout=access \
  --label co.elastic.logs/fileset.stderr=error \
  --label co.elastic.metrics/module=apache \
  --label co.elastic.metrics/metricsets=status \
  --label co.elastic.metrics/hosts='${data.host}:${data.port}' \
  --detach=true \
  --name my-apache-app \
  -p 8080:80 \
  httpd:2.4